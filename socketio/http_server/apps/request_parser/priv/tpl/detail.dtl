<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ECharts</title>
    <!-- 引入 echarts.js -->
    <script src="/static/echarts.min.js"></script>
    <script src="/public/echarts-2.2.7/doc/example/www/js/echarts.js"></script>
</head>
<body>
    <!-- 为ECharts准备一个具备大小（宽高）的Dom -->
    <!-- <table> -->
        <!-- <tr>
            <td><div id="main" style="width: 600px;height:400px;"></div></td>
            <td><div id="main1" style="width: 600px;height:400px;"></div></td>
        </tr> -->
        <!-- <tr>
            <td><div id="main2" style="width: 600px;height:400px;"></div></td>
            <td><div id="main3" style="width: 600px;height:400px;"></div></td>
        </tr> -->
       <!--  <tr>
            <td><div id="main4" style="width: 600px;height:400px;"></div></td>
            <td></td>
        </tr> -->
    <!-- </table> -->


<!-- http://echarts.baidu.com/demo.html#line-aqi -->


            <div id="main1" style="width: 90%;height:600px;"></div>
            <div id="main3" style="width: 90%;height:600px;"></div>
            <div id="main2" style="width: 90%;height:600px;"></div>
        
<script type="text/javascript">
    // Step:3 conifg ECharts's path, link to echarts.js from current page.
    // Step:3 为模块加载器配置echarts的路径，从当前页面链接到echarts.js，定义所需图表路径
    require.config({
        paths: {
            echarts: '/public/echarts-2.2.7/doc/example/www/js'
        }
    });
    
    // Step:4 require echarts and use it in the callback.
    // Step:4 动态加载echarts然后在回调函数中开始使用，注意保持按需加载结构定义图表路径
    require(
        [
            'echarts',
            'echarts/chart/bar',
            'echarts/chart/line',
            'echarts/chart/map'
        ],
        function (ec) {
            //--- 折柱 ---
            var myChart = ec.init(document.getElementById('main1'));
            myChart.setOption({
                 tooltip : {
                    trigger: 'axis'
                },
                toolbox: {
                    show : true,
                    feature : {
                        mark : {show: true},
                        dataZoom : {show: true},
                        dataView : {show: true},
                        magicType : {show: true, type: ['line', 'bar']},
                        restore : {show: true},
                        saveAsImage : {show: true}
                    }
                },
                dataZoom : {
                    show : true,
                    realtime : true,
                    //orient: 'vertical',   // 'horizontal'
                    //x: 0,
                    y: 36,
                    //width: 400,
                    height: 20,
                    //backgroundColor: 'rgba(221,160,221,0.5)',
                    //dataBackgroundColor: 'rgba(138,43,226,0.5)',
                    //fillerColor: 'rgba(38,143,26,0.6)',
                    //handleColor: 'rgba(128,43,16,0.8)',
                    //xAxisIndex:[],
                    //yAxisIndex:[],
                    start : 40,
                    end : 60
                },
                xAxis : [
                    {
                        type : 'category',
                        boundaryGap : false,
                        // data : function (){
                        //     var list = [];
                        //     var n = 0;
                        //     while (n++ < 150) {
                        //         list.push(n);
                        //     }
                        //     return list;
                        // }()
                        data : [{% for u in data %}'{{u.time}}',{% endfor %}]
                        
                    }
                ],
                yAxis : [
                    {
                        type : 'value'
                    }
                ],
                series : [
                    {
                        name:'price',
                        type:'line',
                        // data:function (){
                        //     var list = [];
                        //     for (var i = 1; i <= 150; i++) {
                        //         list.push(Math.round(Math.random()* 30));
                        //     }
                        //     return list;
                        // }()
                        data : [{% for u in data %}{{u.closePrice}},{% endfor %}]
                        
                    }
                ],
                calculable:false
            });
        }
    );
    </script>


    
<!-- =================================================================== -->
    <script type="text/javascript">
        // 基于准备好的dom，初始化echarts实例
        var myChart2 = echarts.init(document.getElementById('main2'));

        // 指定图表的配置项和数据
        var option2 = {
                tooltip : {
                    trigger: 'axis',
                    axisPointer : {            // 坐标轴指示器，坐标轴触发有效
                        type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'
                    }
                },
                legend: {
                    // data: ['直接访问', '邮件营销','联盟广告','视频广告','搜索引擎']
                    data: [
                        {% for cl in clist %}
                            '{{cl.year}}',
                        {% endfor %}
                    ]
                },
                grid: {
                    left: '3%',
                    right: '4%',
                    bottom: '3%',
                    containLabel: true
                },
                xAxis:  {
                    type: 'value'
                },
                yAxis: {
                    type: 'category',
                    // data: ['周一','周二','周三','周四','周五','周六','周日']
                    data: [
                        {% for l in list %}
                            '{{l.y}}',
                        {% endfor %}
                    ]
                },
                series: [
                    // {
                    //     name: '直接访问',
                    //     type: 'bar',
                    //     stack: '总量',
                    //     label: {
                    //         normal: {
                    //             show: true,
                    //             position: 'insideRight'
                    //         }
                    //     },
                    //     data: [320, 302, 301, 334, 390, 330, 320]
                    // },
                    // {
                    //     name: '邮件营销',
                    //     type: 'bar',
                    //     stack: '总量',
                    //     label: {
                    //         normal: {
                    //             show: true,
                    //             position: 'insideRight'
                    //         }
                    //     },
                    //     data: [120, 132, 101, 134, 90, 230, 210]
                    // },
                    // {
                    //     name: '联盟广告',
                    //     type: 'bar',
                    //     stack: '总量',
                    //     label: {
                    //         normal: {
                    //             show: true,
                    //             position: 'insideRight'
                    //         }
                    //     },
                    //     data: [220, 182, 191, 234, 290, 330, 310]
                    // },
                    // {
                    //     name: '视频广告',
                    //     type: 'bar',
                    //     stack: '总量',
                    //     label: {
                    //         normal: {
                    //             show: true,
                    //             position: 'insideRight'
                    //         }
                    //     },
                    //     data: [150, 212, 201, 154, 190, 330, 410]
                    // },
                    // {
                    //     name: '搜索引擎',
                    //     type: 'bar',
                    //     stack: '总量',
                    //     label: {
                    //         normal: {
                    //             show: true,
                    //             position: 'insideRight'
                    //         }
                    //     },
                    //     data: [820, 832, 901, 934, 1290, 1330, 1320]
                    // }

                    {% for cl in clist %}
                        {
                            name: '{{cl.year}}',
                            type: 'bar',
                            stack: '总量',
                            label: {
                                normal: {
                                    show: true,
                                    position: 'insideRight'
                                }
                            },
                            // data: [820, 832, 901, 934, 1290, 1330, 1320]
                            data: [
                                {% for l in cl.l %}
                                    '{{l.num}}',
                                {% endfor %}
                            ]
                        },
                    {% endfor %}
                
                ]
            };


        // 使用刚指定的配置项和数据显示图表。
        myChart2.setOption(option2);
    </script>


     <script type="text/javascript">
        // 基于准备好的dom，初始化echarts实例
        var myChart3 = echarts.init(document.getElementById('main3'));

        // 指定图表的配置项和数据
        var option3 = {
                title: {
                    text: '{{name}} -> {{yid}}',
                    subtext: '数据来自网络'
                },
                tooltip: {
                    trigger: 'axis',
                    axisPointer: {
                        type: 'shadow'
                    }
                },
                legend: {
                    data: ['{{code}}']
                },
                grid: {
                    left: '3%',
                    right: '4%',
                    bottom: '3%',
                    containLabel: true
                },
                xAxis: {
                    type: 'value',
                    boundaryGap: [0, 0.01]
                },
                yAxis: {
                    type: 'category',
                    // data: ['巴西','印尼','美国','印度','中国','世界人口(万)']
                    data: [
                        {% for l in list %}
                            '{{l.y}}',
                        {% endfor %}
                    ]
                },
                series: [
                    // {
                    //     name: '2011年',
                    //     type: 'bar',
                    //     data: [18203, 23489, 29034, 104970, 131744, 630230]
                    // },
                    {
                        name: '{{code}}',
                        type: 'bar',
                        //data: [19325, 23438, 31000, 121594, 134141, 681807]
                        data: [
                            {% for l in list %}
                                {{l.num}},
                            {% endfor %}
                        ]
                    }
                ]
            };


        // 使用刚指定的配置项和数据显示图表。
        myChart3.setOption(option3);
    </script>

   
</body>
</html>
